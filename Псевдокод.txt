def fit(R,Ci,(X,y)):
Вход:  набор моделей регрессий R={R1, R2, ...,Rn}
       модель классификации Ci
       набор обучающих данных (X, y)
Выход: Обученные модели регрессий и модель классификации

    #для каждой модели из набора моделей регрессий
    for model in R:
        #обучение моделей с помощью перекрестного обучения
        model.fit(X, y)
        #предсказание целевых значений для набора X
        y_pred <- model.predict(X)
        #расчет квадратичных ошибок для каждого объекта набора данных
        err[model] <- (y - y_pred)^2
    #поиск лучшей модели для каждого атрибута с наименьшей ошибкой
    for i in X.lenght:
        #определение атрибута, который хранит индексы лучших моделей для каждого объекта
        index <- model.index with idmin(err)
    #обучение модели классификации
    Сi.fit(X, index)

def predict(X):
Вход:  набор данных для предсказания X
Выход: предсказанные значения целевой переменной для набора X

    #для каждого объекта из набора данных
    for x in X:
        #модель классификации предсказывает лучшую модель регрессии для объекта x
        label <- Ci.predict(x)
        #предсказание целевой переменной для объекта x с помощью найденной модели регрессии
        yi <- R[label].predict(x)
        #сохранение предсказанного значение yi в массиве 
        y_pred.append(yi)
    #возврашение значений целевых переменных для набора X
    return y_pred